buildscript {    repositories {        mavenCentral()    }}plugins {    id 'org.springframework.boot' version '2.6.6'    id 'io.spring.dependency-management' version '1.0.11.RELEASE'    id "io.freefair.lombok" version "6.4.2"    id 'java'    id "jacoco"}group = 'ru.test'version = '0.0.1-SNAPSHOT'sourceCompatibility = JavaVersion.VERSION_14targetCompatibility = JavaVersion.VERSION_14configurations {    compileOnly {        extendsFrom annotationProcessor    }}repositories {    mavenCentral()}ext {    set('springCloudVersion', "2021.0.1")}dependencyManagement {    imports {        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"    }}dependencies {    implementation 'org.springframework.boot:spring-boot-starter-actuator'    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'    implementation 'org.springframework.boot:spring-boot-starter-web'    implementation 'org.springframework.boot:spring-boot-starter-data-rest'    implementation 'org.springframework.boot:spring-boot-starter-mail'    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-discoveryclient'    implementation 'org.liquibase:liquibase-core'    implementation 'org.springframework.kafka:spring-kafka'    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '7.0.4.Final'    implementation 'net.lbruun.springboot:preliquibase-spring-boot-starter:1.1.1'    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.4.2.Final'    annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.4.2.Final'    implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.2.0'    testImplementation 'org.springframework.boot:spring-boot-starter-test'    testImplementation 'org.testcontainers:junit-jupiter:1.16.3'    testImplementation "org.testcontainers:postgresql:1.16.3"    runtimeOnly 'org.postgresql:postgresql'}test {    useJUnitPlatform()    reports {        junitXml.getRequired().set(true)        html.getRequired().set(false)    }    finalizedBy jacocoTestReport}jacocoTestReport {    dependsOn test    reports {        xml.required = true    }    afterEvaluate {        classDirectories.setFrom(files(classDirectories.files.collect {            fileTree(dir: it, exclude: [                    "ru/pits/sandbox/yandexcloud/master/data/**/*.*",                    "ru/pits/sandbox/yandexcloud/master/config/**/*.*",                    "ru/pits/sandbox/yandexcloud/master/MasterApplication.class"            ])        }))    }}jacoco {    toolVersion = "0.8.8"}bootJar {    archiveBaseName = 'kubernetes-test'    archiveFileName = 'kubernetes-test.jar'}